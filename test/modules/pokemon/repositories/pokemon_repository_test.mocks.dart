// Mocks generated by Mockito 5.4.0 from annotations
// in snapfi_app/test/modules/pokemon/repositories/pokemon_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:snapfi_app/modules/snapfi_app/domain/errors/errors.dart' as _i5;
import 'package:snapfi_app/modules/snapfi_app/domain/models/pokemon.dart'
    as _i6;
import 'package:snapfi_app/modules/snapfi_app/domain/models/pokemon_detail.dart'
    as _i7;
import 'package:snapfi_app/modules/snapfi_app/domain/repositories/pokemon_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i3.PokemonRepository {
  @override
  _i4.Future<_i2.Either<_i5.FailGetPokemon, List<_i6.Pokemon>>> pokemons(
          {int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #pokemons,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.FailGetPokemon, List<_i6.Pokemon>>>.value(
                _FakeEither_0<_i5.FailGetPokemon, List<_i6.Pokemon>>(
          this,
          Invocation.method(
            #pokemons,
            [],
            {#limit: limit},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.FailGetPokemon, List<_i6.Pokemon>>>.value(
                _FakeEither_0<_i5.FailGetPokemon, List<_i6.Pokemon>>(
          this,
          Invocation.method(
            #pokemons,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.FailGetPokemon, List<_i6.Pokemon>>>);
  @override
  _i4.Future<_i2.Either<_i5.FailGetPokemon, _i7.PokemonDetail>> pokemon({
    String? name,
    String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pokemon,
          [],
          {
            #name: name,
            #id: id,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.FailGetPokemon, _i7.PokemonDetail>>.value(
                _FakeEither_0<_i5.FailGetPokemon, _i7.PokemonDetail>(
          this,
          Invocation.method(
            #pokemon,
            [],
            {
              #name: name,
              #id: id,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.FailGetPokemon, _i7.PokemonDetail>>.value(
                _FakeEither_0<_i5.FailGetPokemon, _i7.PokemonDetail>(
          this,
          Invocation.method(
            #pokemon,
            [],
            {
              #name: name,
              #id: id,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.FailGetPokemon, _i7.PokemonDetail>>);
}
